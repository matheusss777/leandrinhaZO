* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-size: 20px;
}

.container {
  min-height: 100vh;/*define a altura mínima de um elemento em 
  relação à altura da janela de visualização do navegador.  */
  display: flex;
  flex-direction: column;
}

.header {
  width: 100%;
  min-height: 40px;
  background-color: #292929;
  display: flex;
  align-items: center;
  justify-content: space-between;/*significa que o primeiro item será posicionado 
  no início do contêiner, o último item será posicionado no final do contêiner, 
  e o espaço restante será dividido igualmente entre os itens intermediários.*/
  flex-wrap: wrap;/*permite que os itens sejam organizados verticalmente em vez de 
  forçá-los a se ajustarem horizontalmente em uma única linha. Isso melhora a 
  legibilidade e a usabilidade do layout em dispositivos com tamanhos de tela 
  diferentes.*/
  padding: 30px;
  gap: 8px 15px;/*defini o espaçamento entre os elementos em um layout de grade ou flexbox. 
  8 pixels são definidos como o espaçamento vertical (espaço entre as linhas) e 15 pixels 
  como o espaçamento horizontal (espaço entre as colunas).*/
}

.logoNavBar {
  width: 250px;
}

.buttoms {
  display: flex;
  gap: 15px;
}

.navBtn {
  padding: 6px;
  background-color: transparent;
  border: 2px solid transparent;
  color: white;
  cursor: pointer;
  transition: 0.4s;
}

.navBtn:hover {
  border-bottom: 2px solid black;
}

.sectionTitle {
  font-size: 30px;
  font-family: Arial, Helvetica, sans-serif;
  text-align: center;
  padding-top: 20px;
}

.sectionDescription {
  text-align: center;
  color: #383838;
}

.gridContainer {
  display: grid;/*Essa propriedade define o elemento como um contêiner 
  de grade, permitindo organizar seu conteúdo em uma estrutura de grade.*/
  grid-template-columns: 3fr 1fr;/*significa que a primeira coluna ocupará três vezes 
  mais espaço horizontal do que a segunda.*/
  grid-template-areas: "mainContent sidebarContent";
  padding: 20px;
  flex: 1 0 auto;/*define que o elemento pode crescer (flex-grow: 1), não pode encolher 
  (flex-shrink: 0) e tem uma base de tamanho automático (flex-basis: auto).*/
}

.mainContent {
  display: flex;
  flex-wrap: wrap;/*os itens podem ser dispostos verticalmente em várias linhas, conforme necessário, 
  à medida que o tamanho do contêiner ou dos itens muda.*/
  justify-content: center;
  gap: 10px;
  grid-area: mainContent;/*está sendo usado para posicionar um elemento dentro de uma grade CSS, especificando 
  em qual área da grade ele deve ser colocado.*/
}

.categoryCard {
  width: 300px;
  height: 450px;
  border: 2px solid transparent;
  border-radius: 10px;
  transition: 0.5s;
  cursor: pointer;
}

.maincardImg {
  width: 100%;
  height: 180px;
  border-radius: 10px;
}

.categoryCard:hover {
  border-color: black;
}

.mainCategoryCard {
  font-family: Arial, Helvetica, sans-serif;
  padding: 6px;
}

.mainCategoryCardDescription {
  padding: 6px;
}

.sidebarContent {
  background-color: #383838;
  color: white;
  padding: 16px;
  display: flex;
  flex-direction: column;
  align-items: center;
  grid-area: sidebarContent;
  gap: 15px;
}

.sidebarCard {
  width: 75%;
  border: 1px solid transparent;
  border-radius: 10px;
  transition: 0.5s;
  cursor: pointer;
}

.sidebardCardImg {
  width: 100%;
  border-radius: 10px;
}

.sidebardCardTittle {
  font-family: Arial, Helvetica, sans-serif;
  text-align: center;
  padding: 10px;
}

.sidebarCard:hover {
  border-color: gainsboro;
}

.footer {
  width: 100%;
  min-height: 40px;
  background-color: #292929;
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 30px;
  gap: 15px;
}

.logoFooter {
  width: 250px;
}

.footerAcnhor {
  color: white;
  text-decoration: none;
}

@media (max-width: 630px) {
  .gridContainer {
    grid-template-areas:
      "mainContent"
      "sidebarContent";
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
  }
  .sidebarContent {
    min-width: auto;
  }
  .footerAcnhor {
    font-size: 20px;
  }
}

@media (max-width: 560px) {
  .header {
    justify-content: center;
  }
  .footer {
    justify-content: center;
  }
}